; contains bank definitions for the reference computer

#bankdef rom {
    #addr 0x0000
    #size (32 * 1024)
    #outp 0x0000 * 8
    #fill
}

#bankdef ram {
    #addr 0x8000
    #size (32 * 1024)
}


PIC_BASE = 0x00
MMU_BASE = 0x01
UART_BASE = 0x02
SPI_BASE = 0x03
VDP_BASE = 0x04
PSG_BASE = 0x05
DMA_BASE = 0x07
KEY_BASE = 0x08
DEV10_BASE = 0x09
DEV11_BASE = 0x0A
DEV12_BASE = 0x0B
DEV13_BASE = 0x0C
DEV14_BASE = 0x0D
DEV15_BASE = 0x0E
DEV16_BASE = 0x0F

MMU_PAGE8 = MMU_BASE + 0
MMU_PAGE9 = MMU_BASE + 1
MMU_PAGE10 = MMU_BASE + 2
MMU_PAGE11 = MMU_BASE + 3
MMU_PAGE12 = MMU_BASE + 4
MMU_PAGE13 = MMU_BASE + 5
MMU_PAGE14 = MMU_BASE + 6
MMU_PAGE15 = MMU_BASE + 7

DMA_SRC_HI = DMA_BASE + 0
DMA_SRC_MI = DMA_BASE + 1
DMA_SRC_LO = DMA_BASE + 2
DMA_DST_HI = DMA_BASE + 3
DMA_DST_MI = DMA_BASE + 4
DMA_DST_LO = DMA_BASE + 5
DMA_LEN_HI = DMA_BASE + 6
DMA_LEN_MI = DMA_BASE + 7
DMA_LEN_LO = DMA_BASE + 8

VRAM_BASE = 0x0F8000
VRAM_BITMAP0 = VRAM_BASE + (0 * 1024)
VRAM_BITMAP1 = VRAM_BASE + (8 * 1024)
VRAM_TILEMAP = VRAM_BASE + (16 * 1024)
VRAM_PALETTE = VRAM_BASE + (24 * 1024)
